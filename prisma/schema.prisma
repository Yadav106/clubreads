// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  clubIds        String[]  @db.ObjectId
  clubs          Club[]    @relation(fields: [clubIds], references: [id])
  ownedClubs     Club[]    @relation(name: "own")
  accounts       Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Club {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  image       String?
  name        String
  leaderId    String   @db.ObjectId
  leader      User     @relation(name: "own", fields: [leaderId], references: [id])
  userIds     String[] @db.ObjectId
  users       User[]   @relation(fields: [userIds], references: [id])
  desc        String
  books       Book[]
  currentBook String?   @db.ObjectId
}

model Book {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  image  String?
  name   String
  author String
  desc   String
  pages  Int
  clubId String  @db.ObjectId
  club   Club    @relation(fields: [clubId], references: [id])
}
